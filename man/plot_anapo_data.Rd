% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_specific_check.R
\name{plot_anapo_data}
\alias{plot_anapo_data}
\title{Function to create list data/argument for the plot plot_anapo}
\usage{
plot_anapo_data(dataframe1, dataframe2, dataframe3)
}
\arguments{
\item{dataframe1}{{\link[base]{data.frame}} expected. Csv or the second output of the function {\link[codama]{check_anapo_inspector}}, which must be done before using the plot_anapo_data () function.}

\item{dataframe2}{{\link[base]{data.frame}} expected. Csv or output of the function {\link[furdeb]{data_extraction}}, which must be done before using the plot_anapo_data () function.}

\item{dataframe3}{{\link[base]{data.frame}} expected. Csv or output of the function {\link[furdeb]{data_extraction}}, which must be done before using the plot_anapo_data () function.}
}
\value{
The function returns a {\link[base]{list}} with the sub list is a data for one plot
}
\description{
Function to create list data/argument
}
\details{
The input dataframe must contain all these columns for the function to work :
\itemize{
Dataframe 1:
 \item{\code{  activity_id}}
 \item{\code{  activity_date}}
 \item{\code{  activity_time}}
 \item{\code{  activity_position}}
 \item{\code{  activity_crs}}
 \item{\code{  vms_date}}
 \item{\code{  vms_time}}
 \item{\code{  vms_position}}
 \item{\code{  distance}}
 \item{\code{  duration}}
 \item{\code{  score}}
 \item{\code{  vms_crs}}
}
\itemize{
Dataframe 2:
 \item{\code{  trip_id}}
 \item{\code{  vessel_code}}
 \item{\code{  trip_enddate}}
 \item{\code{  activity_id}}
 \item{\code{  activity_date}}
 \item{\code{  activity_number}}
 \item{\code{  vesselactivity_code}}
}
\itemize{
Dataframe 3:
 \item{\code{  transmittingbuoy_id}}
 \item{\code{  transmittingbuoyoperation_code}}
 \item{\code{  activity_id}}
}
}
\examples{
dataframe1 <- data.frame(activity_id = c("4", "4", "4", "6", "6", "6", "2", "2", "2"),
                         activity_date = as.Date(c("2020/01/13", "2020/01/13", "2020/01/13",
                                                   "2020/01/13", "2020/01/13", "2020/01/13",
                                                   "2020/01/12", "2020/01/12", "2020/01/12")),
                         activity_time = c("03:12:34", "03:12:34", "03:12:34", "23:26:47",
                                           "23:26:47", "23:26:47", "05:26:01", "05:26:01",
                                           "05:26:01"),
                         activity_position = c("POINT (2.6 3.8)", "POINT (2.6 3.8)",
                                               "POINT (2.6 3.8)", "POINT (3 0.6)",
                                               "POINT (3 0.6)", "POINT (3 0.6)",
                                               "POINT (0 0)", "POINT (0 0)", "POINT (0 0)"),
                         activity_crs = c(4326, 4326, 4326, 4326, 4326, 4326, 4326, 4326, 4326),
                         vms_date = as.Date(c("2020/01/13", "2020/01/13", "2020/01/12",
                                              "2020/01/13", "2020/01/13", "2020/01/12",
                                              "2020/01/12", "2020/01/13", "2020/01/13")),
                         vms_time = c("10:55:15", "22:32:17", "15:26:01", "10:55:15",
                                      "22:32:17", "15:26:01", "15:26:01", "10:55:15", "22:32:17"),
                         vms_position = c("POINT (0 0.1)", "POINT (3 0.3)", "POINT (4 4)",
                                          "POINT (0 0.1)", "POINT (3 0.3)", "POINT (4 4)",
                                          "POINT (4 4)", "POINT (0 0.1)", "POINT (3 0.3)"),
                         distance = c(271.445826973379, 211.507663354955, 84.71741855987,
                                      182.602328607533, 18.012165417519, 212.768118823317,
                                      339.502583, 6.004055, 181.019203),
                         duration = c(-27761000, -69583000, -44007000, 45092000, 3270000,
                                      28846000, NA, NA, NA),
                         score = c(0, 0, 0, 0, 0.209441144555651, 0, NA, NA, NA),
                         vms_crs = c(4326, 4326, 4326, 4326, 4326, 4326, 4326, 4326, 4326))
units::install_unit("NM", "1852 m", "Nautical mile")
dataframe1$distance <- units::set_units(dataframe1$distance, NM)
units::install_unit("ms", "1000 secs", "Milliseconds")
dataframe1$duration <- units::set_units(dataframe1$duration, ms)
dataframe2 <- data.frame(trip_id  = c("1", "1", "1"),
                         vessel_code = c("0", "0", "0"),
                         trip_enddate = as.Date(c("2020/01/20", "2020/01/20", "2020/01/20")),
                         activity_id = c("2", "4", "6"),
                         activity_date = as.Date(c("2020/01/12", "2020/01/13", "2020/01/13")),
                         activity_number = c(1L, 1L, 1L),
                         vesselactivity_code = c("2","6", "13"))
dataframe3 <- data.frame(transmittingbuoy_id  = c("1"),
                         transmittingbuoyoperation_code = c("4"),
                         activity_id = c("6"))
plot_anapo_data(dataframe1, dataframe2, dataframe3)
}
