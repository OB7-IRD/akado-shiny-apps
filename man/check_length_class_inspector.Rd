% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function.R
\name{check_length_class_inspector}
\alias{check_length_class_inspector}
\title{Gives the inconsistencies between size class of the samples depending on the species and measurement type and the valid threshold}
\usage{
check_length_class_inspector(
  dataframe1,
  output,
  species = c("YFT", "BET", "ALB"),
  size_measure_type = "FL",
  threshold = 80
)
}
\arguments{
\item{dataframe1}{{\link[base]{data.frame}} expected. Csv or output of the function {\link[furdeb]{data_extraction}}, which must be done before using the check_length_class_inspector () function.}

\item{output}{{\link[base]{character}} expected. Kind of expected output. You can choose between "message", "report" or "logical".}

\item{species}{{\link[base]{character}} expected. Default values: c("YFT", "BET", "ALB"). Vector of the species inventory controlled.}

\item{size_measure_type}{{\link[base]{character}} expected. Default values: "FL". Vector of the size measure type controlled.}

\item{threshold}{{\link[base]{numeric}} expected. Default values: 80. Maximum size threshold measured}
}
\value{
The function returns a {\link[base]{character}} with output is "message", a {\link[base]{data.frame}} with output is "report", a {\link[base]{logical}} with output is "logical"
}
\description{
The purpose of the check_length_class_inspector function is to provide a table of data that contains an inconsistency between the size class of the samples depending on the species and measurement type and the valid threshold (Default : 80)
}
\details{
The input dataframe must contain all these columns for the function to work :
\itemize{
Dataframe 1:
 \item{\code{  samplespeciesmeasure_id}}
 \item{\code{  species_fao_code}}
 \item{\code{  sizemeasuretype_code}}
 \item{\code{  samplespeciesmeasure_sizeclass}}
}
}
\examples{
dataframe1 <- data.frame(samplespeciesmeasure_id = c("1", "2", "3", "4"),
                         species_fao_code = c("YFT", "YFT", "LTA", "YFT"),
                         sizemeasuretype_code = c("FL", "PD1", "FL", "FL"),
                         samplespeciesmeasure_sizeclass = c(10, 90, 85, 83))
check_length_class_inspector(dataframe1, output = "report")
}
