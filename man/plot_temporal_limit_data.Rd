% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_specific_check.R
\name{plot_temporal_limit_data}
\alias{plot_temporal_limit_data}
\title{Function to create list data/argument for the plot plot_temporal_limit}
\usage{
plot_temporal_limit_data(dataframe1, dataframe2)
}
\arguments{
\item{dataframe1}{{\link[base]{data.frame}} expected. Csv or the second output of the function {\link[codama]{check_temporal_limit_inspector}}, which must be done before using the plot_temporal_limit_data () function.}

\item{dataframe2}{{\link[base]{data.frame}} expected. Csv or output of the function {\link[furdeb]{data_extraction}}, which must be done before using the plot_temporal_limit_data () function.}
}
\value{
The function returns a {\link[base]{list}} with the sub list is a data for one plot
}
\description{
Function to create list data/argument
}
\details{
The input dataframe must contain all these columns for the function to work :
\itemize{
Dataframe 1:
 \item{\code{  trip_id}}
 \item{\code{  trip_startdate}}
 \item{\code{  trip_enddate}}
 \item{\code{  activity_date}}
 \item{\code{  inter_activity_date}}
 \item{\code{  exter_activity_date}}
 \item{\code{  count_freq}}
 \item{\code{  logical}}
}
\itemize{
Dataframe 2:
 \item{\code{  trip_id}}
 \item{\code{  vessel_code}}
}
}
\examples{
dataframe1 <- data.frame(trip_id = c("1", "1", "2", "2", "2"),
                         trip_startdate = as.Date(c("2020/01/01", "2020/01/01", "2020/01/01",
                                                    "2020/01/01", "2020/01/01")),
                         trip_enddate = as.Date(c("2020/01/02", "2020/01/02", "2020/01/02",
                                                  "2020/01/02", "2020/01/02")),
                         activity_date = as.Date(c("2020/01/01", "2020/01/02","2020/01/01",
                                                   "2020/01/02", "2020/01/03")),
                         inter_activity_date = c(TRUE, TRUE, TRUE, TRUE, FALSE),
                         exter_activity_date = c(FALSE, FALSE, FALSE, FALSE, TRUE),
                         count_freq = c(1L, 1L, 1L, 1L, 1L),
                         logical = c(TRUE, TRUE, TRUE, TRUE, FALSE))
dataframe2 <- data.frame(trip_id = c("1", "2"),
                         vessel_code = c("0", "0"))
plot_temporal_limit_data(dataframe1, dataframe2)
}
