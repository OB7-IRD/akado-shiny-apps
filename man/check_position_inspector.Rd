% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function.R
\name{check_position_inspector}
\alias{check_position_inspector}
\title{Gives the inconsistencies between the ocean declared for the trip and the position of the activity}
\usage{
check_position_inspector(
  dataframe1,
  dataframe2,
  dataframe3,
  output,
  activity_crs = 4326,
  harbour_crs = 4326,
  buffer_harbour = 11100,
  buffer_sea = 925
)
}
\arguments{
\item{dataframe1}{{\link[base]{data.frame}} expected. Csv or output of the function {\link[furdeb]{data_extraction}}, which must be done before using the check_position_inspector () function.}

\item{dataframe2}{{\link[base]{data.frame}} expected. Csv or output of the function {\link[furdeb]{data_extraction}}, which must be done before using the check_position_inspector () function.}

\item{dataframe3}{{\link[base]{data.frame}} expected. Layer to containing the seas shapefile (example cf : cf : Flanders Marine Institute. IHO Sea Areas, version 1. Available online at https://www.marineregions.org/)}

\item{output}{{\link[base]{character}} expected. Kind of expected output. You can choose between "message", "report" or "logical".}

\item{activity_crs}{{\link[base]{numeric}} expected. Default values: 4326. Coordinate Reference Systems for the position activity}

\item{harbour_crs}{{\link[base]{numeric}} expected. Default values: 4326. Coordinate Reference Systems for the position harbour}

\item{buffer_harbour}{{\link[base]{numeric}} expected. Default values: 11100. Buffer to be used for harbour, in meter}

\item{buffer_sea}{{\link[base]{numeric}} expected. Default values: 925. Buffer to be used for seas, in meter}
}
\value{
The function returns a {\link[base]{character}} with output is "message", two {\link[base]{data.frame}} with output is "report" (the first without geographical location and the second with geographical location), a {\link[base]{logical}} with output is "logical"
}
\description{
The purpose of the check_position_inspector function is to provide a table of data that contains an inconsistency with ocean declaration and activity position
}
\details{
The input dataframe must contain all these columns for the function to work :
\itemize{
Dataframe 1:
 \item{\code{  activity_id}}
 \item{\code{  ocean_label}}
 \item{\code{  activity_position}}
 \item{\code{  trip_id}}
}
\itemize{
Dataframe 2:
 \item{\code{  trip_id}}
 \item{\code{  harbour_position_departure}}
 \item{\code{  harbour_position_landing}}
}
\itemize{
Dataframe 3:
 \item{\code{  ID}}
 \item{\code{  geometry}}
}
}
\examples{
#Activity 1, 3 and 4 are ok,
#Activity 2 has different ocean,
#Activity 5 is outside ocean and harbour,
#Activity 6 has no position
#Activity 7 has no ocean label
dataframe1 <- data.frame(activity_id = c("1", "2", "3", "4", "5", "6", "7"),
                         ocean_label = c("ocean_1", "ocean_2", "ocean_2", "ocean_2", "ocean_2",
                                         "ocean_1", NA),
                         activity_position = c("POINT (0 0)", "POINT (0 0)", "POINT (-1 -1)",
                                               "POINT (1 1)", "POINT (3 3)", NA, "POINT (1 1)"),
                         trip_id = c("1", "2", "2", "2", "2", "2", "2"))
dataframe2 <- data.frame(trip_id = c("1", "2"),
                         harbour_position_departure = c("POINT (20 20)", "POINT (-1.05 -1)"),
                         harbour_position_landing = c("POINT (20 20)", "POINT (20 20)"))
dataframe3 <- sf::st_sf(data.frame(ID = c("ocean_1", "ocean_2"),
                                   geometry = sf::st_sfc(sf::st_polygon(list(rbind(c(0,0), c(2,0),
                                                                                   c(2,2), c(0,2),
                                                                                   c(0,0)))),
                                                         sf::st_polygon(list(rbind(c(0,1), c(3,1),
                                                                                   c(3,2), c(0,2),
                                                                                   c(0,1)))),
                                                         crs = 4326)))
check_position_inspector(dataframe1, dataframe2, dataframe3, output = "report")
}
